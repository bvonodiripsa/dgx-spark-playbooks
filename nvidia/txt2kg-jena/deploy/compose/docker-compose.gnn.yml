services:
  app:
    build:
      context: ../..
      dockerfile: deploy/docker/Dockerfile
    ports:
      - '3001:3000'
    environment:
      - ARANGODB_URL=http://localhost:8529
      - ARANGODB_DB=txt2kg
      - PINECONE_HOST=localhost
      - PINECONE_PORT=5081
      - PINECONE_API_KEY=pclocal
      - PINECONE_ENVIRONMENT=local
      - LANGCHAIN_TRACING_V2=true
      - SENTENCE_TRANSFORMER_URL=http://localhost:8000
      - MODEL_NAME=all-MiniLM-L6-v2
      - GNN_MODEL_URL=http://localhost:5000
      - GRPC_SSL_CIPHER_SUITES=HIGH+ECDSA:HIGH+aRSA
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      # - XAI_API_KEY=${XAI_API_KEY}  # xAI integration removed
    networks:
      - pinecone-net
      - default
  arangodb:
    image: arangodb:latest
    ports:
      - '8529:8529'
    environment:
      - ARANGO_NO_AUTH=1
    volumes:
      - arangodb_data:/var/lib/arangodb3
      - arangodb_apps_data:/var/lib/arangodb3-apps
  arangodb-init:
    image: arangodb:latest
    depends_on:
      arangodb:
        condition: service_started
    restart: on-failure
    entrypoint: >
      sh -c "
        echo 'Waiting for ArangoDB to start...' &&
        sleep 10 &&
        echo 'Creating txt2kg database...' &&
        arangosh --server.endpoint tcp://arangodb:8529 --server.authentication false --javascript.execute-string 'try { db._createDatabase(\"txt2kg\"); console.log(\"Database txt2kg created successfully!\"); } catch(e) { if(e.message.includes(\"duplicate\")) { console.log(\"Database txt2kg already exists\"); } else { throw e; } }'
      "
  entity-embeddings:
    image: ghcr.io/pinecone-io/pinecone-index:latest
    container_name: entity-embeddings
    environment:
      PORT: 5081
      INDEX_TYPE: serverless
      VECTOR_TYPE: dense
      DIMENSION: 384
      METRIC: cosine
      INDEX_NAME: entity-embeddings
    ports:
      - "5081:5081"
    platform: linux/amd64
    networks:
      - pinecone-net
    restart: unless-stopped
  sentence-transformers:
    build:
      context: ../../deploy/services/sentence-transformers
      dockerfile: Dockerfile
    ports:
      - '8000:80'
    environment:
      - MODEL_NAME=all-MiniLM-L6-v2
    networks:
      - default
  gnn-model:
    build:
      context: ../..
      dockerfile: deploy/services/gnn_model/Dockerfile
    ports:
      - '5000:5000'
    volumes:
      - models:/app/models
    environment:
      - MODEL_PATH=/app/models/tech-qa-model.pt
      - LLM_GENERATOR_NAME=meta-llama/Meta-Llama-3.1-8B-Instruct
      - GNN_HID_CHANNELS=1024
      - GNN_LAYERS=4
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - default

volumes:
  models:
  arangodb_data:
  arangodb_apps_data:

networks:
  pinecone-net:
    name: pinecone
  default:
    driver: bridge 